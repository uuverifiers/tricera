/*public static int CoincidenceCount1(int[ ] f , int[ ] g)
    requires forall{int i in (0 : f .Length),
    int j in (0 : f .Length), i < j ; f [i] < f [j ]};
    requires forall{int i in (0 : g.Length),
    int j in (0 : g.Length), i < j ; g[i] < g[j ]};
    ensures result == count{int i in (0 : f .Length),
    int j in (0 : g.Length); f [i] == g[j ]};
{
int ct = 0; int m = 0; int n = 0;
while (m < f .Length && n < g.Length)
invariant ct == (I0)
count{int i in (0 : m), int j in (0 : n); f [i] == g[j ]};
invariant m 6 f .Length && n 6 g.Length &&
(m == f .Length || forall{int j in (0 : n); g[j ] < f [m]})
&&
(n == g.Length || forall{int i in (0 : m); f [i] < g[n]})
{
if (f [m] < g[n]) { m++; }
else if (g[n] < f [m]) { n++; }
else { ct++; m++; n++; }
}
return ct;
}
*/

void main() {
    int
}